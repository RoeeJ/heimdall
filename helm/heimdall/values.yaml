# Default values for heimdall DNS server

replicaCount: 3

image:
  repository: ghcr.io/roeej/heimdall
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

# DNS Server Configuration
config:
  # Upstream DNS servers
  upstreamServers:
    - "1.1.1.1:53"
    - "8.8.8.8:53"
    - "8.8.4.4:53"
  
  # DNS server bind address (internal container port)
  bindAddr: "0.0.0.0:1053"
  
  # HTTP metrics/health server bind address
  httpBindAddr: "0.0.0.0:8080"
  
  # Cache configuration
  cache:
    enabled: true
    maxSize: 10000
    defaultTTL: 300
    saveInterval: 300
    filePath: "/cache/heimdall_cache.rkyv"
  
  # Rate limiting
  rateLimiting:
    enabled: false
    queriesPerSecondPerIP: 100
    globalQueriesPerSecond: 10000
  
  # Performance tuning
  workerThreads: 0  # 0 = auto-detect
  blockingThreads: 512
  maxConcurrentQueries: 1000
  
  # Resolver settings
  upstreamTimeout: 2000  # milliseconds
  maxRetries: 3
  enableParallelQueries: true

service:
  type: LoadBalancer
  # DNS ports
  dnsPort: 53
  dnsProtocol: UDP
  dnsTcpPort: 53
  dnsTcpProtocol: TCP
  # HTTP port for metrics/health
  httpPort: 8080
  httpProtocol: TCP
  
  # Optional: specify loadBalancerIP if you want a specific IP
  # loadBalancerIP: ""
  
  # Optional: annotations for cloud provider load balancers
  annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Persistence for cache
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  # Use existingClaim if you have a pre-created PVC
  # existingClaim: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
    add:
    - NET_BIND_SERVICE

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - heimdall
        topologyKey: kubernetes.io/hostname

# Probes configuration
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Monitoring
metrics:
  enabled: true
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

# Environment variables (additional)
env:
  - name: RUST_LOG
    value: "heimdall=info,warn"

# Volume mounts (additional)
volumeMounts: []

# Volumes (additional)
volumes: []