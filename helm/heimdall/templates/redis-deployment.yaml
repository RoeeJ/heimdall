{{- if .Values.redis.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "heimdall.fullname" . }}-redis
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    {{- include "heimdall.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
  type: ClusterIP
---
{{- if .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "heimdall.fullname" . }}-redis-data
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
  {{- if .Values.redis.persistence.storageClass }}
  storageClassName: {{ .Values.redis.persistence.storageClass }}
  {{- end }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "heimdall.fullname" . }}-redis
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "heimdall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "heimdall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.redis.podSecurityContext | nindent 8 }}
      containers:
      - name: redis
        securityContext:
          {{- toYaml .Values.redis.securityContext | nindent 10 }}
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        command:
        - redis-server
        {{- range .Values.redis.args }}
        - {{ . | quote }}
        {{- end }}
        {{- if .Values.redis.auth.enabled }}
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "heimdall.fullname" . }}-redis-secret
              key: redis-password
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        {{- end }}
      {{- if .Values.redis.persistence.enabled }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ include "heimdall.fullname" . }}-redis-data
      {{- end }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}